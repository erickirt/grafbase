extend schema
  @link(
    url: "https://grafbase.com/extensions/postgres/0.2.0"
    import: [
      "@pgDatabase"
      "@pgTable"
      "@pgColumn"
      "@pgEnum"
      "@pgEnumVariant"
      "@pgRelation"
      "@pgKey"
      "@pgLookup"
      "@pgSelectOne"
      "@pgSelectMany"
      "@pgInsertOne"
      "@pgInsertMany"
      "@pgUpdateOne"
      "@pgUpdateMany"
      "@pgDeleteOne"
      "@pgDeleteMany"
      "@pgConnection"
      "@pgMutation"
      "@pgReturning"
      "PgKeyType"
      "PgColumnType"
    ]
  )
  @link(url: "https://specs.grafbase.com/composite-schemas/v1", import: ["@lookup", "@key"])
  @link(url: "https://specs.apollo.dev/federation/v2.3", import: ["@shareable", "@inaccessible"])
  @pgDatabase(name: "products")

"""
JSON data type
"""
scalar JSON

"""
Binary data type
"""
scalar Bytes

"""
Big integer data type
"""
scalar BigInt

"""
Decimal data type
"""
scalar Decimal

"""
Specifies the direction for ordering results.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given orderBy argument.
  """
  ASC
  """
  Specifies a descending order for a given orderBy argument.
  """
  DESC
}

"""
Search filter input for String type.
"""
input StringFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: String
  """
  The value is not the one given
  """
  ne: String
  """
  The value is greater than the one given
  """
  gt: String
  """
  The value is less than the one given
  """
  lt: String
  """
  The value is greater than, or equal to the one given
  """
  gte: String
  """
  The value is less than, or equal to the one given
  """
  lte: String
  """
  The given input is part of the column value
  """
  like: String
  """
  The value is in the given array of values
  """
  in: [String!]
  """
  The value is not in the given array of values
  """
  nin: [String!]
  """
  A negation of the given filter
  """
  not: StringFilterInput
}

"""
Update input for String type.
"""
input StringUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: String
}

"""
Update input for String array type.
"""
input StringArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [String]
  """
  Append an array value to the column.
  """
  append: [String]
  """
  Prepend an array value to the column.
  """
  prepend: [String]
}

"""
Search filter input for BigInt type.
"""
input BigIntFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: BigInt
  """
  The value is not the one given
  """
  ne: BigInt
  """
  The value is greater than the one given
  """
  gt: BigInt
  """
  The value is less than the one given
  """
  lt: BigInt
  """
  The value is greater than, or equal to the one given
  """
  gte: BigInt
  """
  The value is less than, or equal to the one given
  """
  lte: BigInt
  """
  The value is in the given array of values
  """
  in: [BigInt!]
  """
  The value is not in the given array of values
  """
  nin: [BigInt!]
  """
  A negation of the given filter
  """
  not: BigIntFilterInput
}

"""
Update input for BigInt type.
"""
input BigIntUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: BigInt
  """
  Increments the value of a field by the specified value.
  """
  increment: BigInt
  """
  Decrements the value of a field by the specified value.
  """
  decrement: BigInt
  """
  Multiplies the value of a field by the specified value.
  """
  multiply: BigInt
  """
  Divides the value of a field by the specified value.
  """
  divide: BigInt
}

"""
Update input for BigInt array type.
"""
input BigIntArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [BigInt]
  """
  Append an array value to the column.
  """
  append: [BigInt]
  """
  Prepend an array value to the column.
  """
  prepend: [BigInt]
}

"""
Search filter input for Int type.
"""
input IntFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: Int
  """
  The value is not the one given
  """
  ne: Int
  """
  The value is greater than the one given
  """
  gt: Int
  """
  The value is less than the one given
  """
  lt: Int
  """
  The value is greater than, or equal to the one given
  """
  gte: Int
  """
  The value is less than, or equal to the one given
  """
  lte: Int
  """
  The value is in the given array of values
  """
  in: [Int!]
  """
  The value is not in the given array of values
  """
  nin: [Int!]
  """
  A negation of the given filter
  """
  not: IntFilterInput
}

"""
Update input for Int type.
"""
input IntUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: Int
  """
  Increments the value of a field by the specified value.
  """
  increment: Int
  """
  Decrements the value of a field by the specified value.
  """
  decrement: Int
  """
  Multiplies the value of a field by the specified value.
  """
  multiply: Int
  """
  Divides the value of a field by the specified value.
  """
  divide: Int
}

"""
Update input for Int array type.
"""
input IntArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [Int]
  """
  Append an array value to the column.
  """
  append: [Int]
  """
  Prepend an array value to the column.
  """
  prepend: [Int]
}

"""
Search filter input for Float type.
"""
input FloatFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: Float
  """
  The value is not the one given
  """
  ne: Float
  """
  The value is greater than the one given
  """
  gt: Float
  """
  The value is less than the one given
  """
  lt: Float
  """
  The value is greater than, or equal to the one given
  """
  gte: Float
  """
  The value is less than, or equal to the one given
  """
  lte: Float
  """
  The value is in the given array of values
  """
  in: [Float!]
  """
  The value is not in the given array of values
  """
  nin: [Float!]
  """
  A negation of the given filter
  """
  not: FloatFilterInput
}

"""
Update input for Float type.
"""
input FloatUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: Float
  """
  Increments the value of a field by the specified value.
  """
  increment: Float
  """
  Decrements the value of a field by the specified value.
  """
  decrement: Float
  """
  Multiplies the value of a field by the specified value.
  """
  multiply: Float
  """
  Divides the value of a field by the specified value.
  """
  divide: Float
}

"""
Update input for Float array type.
"""
input FloatArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [Float]
  """
  Append an array value to the column.
  """
  append: [Float]
  """
  Prepend an array value to the column.
  """
  prepend: [Float]
}

"""
Search filter input for Boolean type.
"""
input BooleanFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: Boolean
  """
  The value is not the one given
  """
  ne: Boolean
  """
  The value is greater than the one given
  """
  gt: Boolean
  """
  The value is less than the one given
  """
  lt: Boolean
  """
  The value is greater than, or equal to the one given
  """
  gte: Boolean
  """
  The value is less than, or equal to the one given
  """
  lte: Boolean
  """
  The value is in the given array of values
  """
  in: [Boolean!]
  """
  The value is not in the given array of values
  """
  nin: [Boolean!]
  """
  A negation of the given filter
  """
  not: BooleanFilterInput
}

"""
Update input for Boolean type.
"""
input BooleanUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: Boolean
}

"""
Update input for Boolean array type.
"""
input BooleanArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [Boolean]
  """
  Append an array value to the column.
  """
  append: [Boolean]
  """
  Prepend an array value to the column.
  """
  prepend: [Boolean]
}

"""
Search filter input for Decimal type.
"""
input DecimalFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: Decimal
  """
  The value is not the one given
  """
  ne: Decimal
  """
  The value is greater than the one given
  """
  gt: Decimal
  """
  The value is less than the one given
  """
  lt: Decimal
  """
  The value is greater than, or equal to the one given
  """
  gte: Decimal
  """
  The value is less than, or equal to the one given
  """
  lte: Decimal
  """
  The value is in the given array of values
  """
  in: [Decimal!]
  """
  The value is not in the given array of values
  """
  nin: [Decimal!]
  """
  A negation of the given filter
  """
  not: DecimalFilterInput
}

"""
Update input for Decimal type.
"""
input DecimalUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: Decimal
  """
  Increments the value of a field by the specified value.
  """
  increment: Decimal
  """
  Decrements the value of a field by the specified value.
  """
  decrement: Decimal
  """
  Multiplies the value of a field by the specified value.
  """
  multiply: Decimal
  """
  Divides the value of a field by the specified value.
  """
  divide: Decimal
}

"""
Update input for Decimal array type.
"""
input DecimalArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [Decimal]
  """
  Append an array value to the column.
  """
  append: [Decimal]
  """
  Prepend an array value to the column.
  """
  prepend: [Decimal]
}

"""
Search filter input for Bytes type.
"""
input BytesFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: Bytes
  """
  The value is not the one given
  """
  ne: Bytes
  """
  The value is greater than the one given
  """
  gt: Bytes
  """
  The value is less than the one given
  """
  lt: Bytes
  """
  The value is greater than, or equal to the one given
  """
  gte: Bytes
  """
  The value is less than, or equal to the one given
  """
  lte: Bytes
  """
  The value is in the given array of values
  """
  in: [Bytes!]
  """
  The value is not in the given array of values
  """
  nin: [Bytes!]
  """
  A negation of the given filter
  """
  not: BytesFilterInput
}

"""
Update input for Bytes type.
"""
input BytesUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: Bytes
}

"""
Update input for Bytes array type.
"""
input BytesArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [Bytes]
  """
  Append an array value to the column.
  """
  append: [Bytes]
  """
  Prepend an array value to the column.
  """
  prepend: [Bytes]
}

"""
Search filter input for JSON type.
"""
input JSONFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: JSON
  """
  The value is not the one given
  """
  ne: JSON
  """
  The value is greater than the one given
  """
  gt: JSON
  """
  The value is less than the one given
  """
  lt: JSON
  """
  The value is greater than, or equal to the one given
  """
  gte: JSON
  """
  The value is less than, or equal to the one given
  """
  lte: JSON
  """
  The value is in the given array of values
  """
  in: [JSON!]
  """
  The value is not in the given array of values
  """
  nin: [JSON!]
  """
  A negation of the given filter
  """
  not: JSONFilterInput
}

"""
Update input for JSON type.
"""
input JSONUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: JSON
  """
  Append JSON value to the column.
  """
  append: JSON
  """
  Prepend JSON value to the column.
  """
  prepend: JSON
  """
  Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
  """
  deleteKey: String
  """
  Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
  """
  deleteElem: Int
  """
  Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
  """
  deleteAtPath: [String!]
}

"""
Update input for JSON array type.
"""
input JSONArrayUpdateInput @oneOf {
  """
  Replaces the value of a field with the specified value.
  """
  set: [JSON]
  """
  Append an array value to the column.
  """
  append: [JSON]
  """
  Prepend an array value to the column.
  """
  prepend: [JSON]
}

"""
Search filter input for String array type.
"""
input StringArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [String]
  """
  The value is not the one given
  """
  ne: [String]
  """
  The value is greater than the one given
  """
  gt: [String]
  """
  The value is less than the one given
  """
  lt: [String]
  """
  The value is greater than, or equal to the one given
  """
  gte: [String]
  """
  The value is less than, or equal to the one given
  """
  lte: [String]
  """
  The value is in the given array of values
  """
  in: [[String]!]
  """
  The value is not in the given array of values
  """
  nin: [[String]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [String]
  """
  Checks if the array is contained within the provided array
  """
  contained: [String]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [String]
  """
  A negation of the given filter
  """
  not: StringArrayFilterInput
}

"""
Search filter input for Int array type.
"""
input IntArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [Int]
  """
  The value is not the one given
  """
  ne: [Int]
  """
  The value is greater than the one given
  """
  gt: [Int]
  """
  The value is less than the one given
  """
  lt: [Int]
  """
  The value is greater than, or equal to the one given
  """
  gte: [Int]
  """
  The value is less than, or equal to the one given
  """
  lte: [Int]
  """
  The value is in the given array of values
  """
  in: [[Int]!]
  """
  The value is not in the given array of values
  """
  nin: [[Int]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [Int]
  """
  Checks if the array is contained within the provided array
  """
  contained: [Int]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [Int]
  """
  A negation of the given filter
  """
  not: IntArrayFilterInput
}

"""
Search filter input for BigInt array type.
"""
input BigIntArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [BigInt]
  """
  The value is not the one given
  """
  ne: [BigInt]
  """
  The value is greater than the one given
  """
  gt: [BigInt]
  """
  The value is less than the one given
  """
  lt: [BigInt]
  """
  The value is greater than, or equal to the one given
  """
  gte: [BigInt]
  """
  The value is less than, or equal to the one given
  """
  lte: [BigInt]
  """
  The value is in the given array of values
  """
  in: [[BigInt]!]
  """
  The value is not in the given array of values
  """
  nin: [[BigInt]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [BigInt]
  """
  Checks if the array is contained within the provided array
  """
  contained: [BigInt]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [BigInt]
  """
  A negation of the given filter
  """
  not: BigIntArrayFilterInput
}

"""
Search filter input for Decimal array type.
"""
input DecimalArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [Decimal]
  """
  The value is not the one given
  """
  ne: [Decimal]
  """
  The value is greater than the one given
  """
  gt: [Decimal]
  """
  The value is less than the one given
  """
  lt: [Decimal]
  """
  The value is greater than, or equal to the one given
  """
  gte: [Decimal]
  """
  The value is less than, or equal to the one given
  """
  lte: [Decimal]
  """
  The value is in the given array of values
  """
  in: [[Decimal]!]
  """
  The value is not in the given array of values
  """
  nin: [[Decimal]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [Decimal]
  """
  Checks if the array is contained within the provided array
  """
  contained: [Decimal]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [Decimal]
  """
  A negation of the given filter
  """
  not: DecimalArrayFilterInput
}

"""
Search filter input for Float array type.
"""
input FloatArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [Float]
  """
  The value is not the one given
  """
  ne: [Float]
  """
  The value is greater than the one given
  """
  gt: [Float]
  """
  The value is less than the one given
  """
  lt: [Float]
  """
  The value is greater than, or equal to the one given
  """
  gte: [Float]
  """
  The value is less than, or equal to the one given
  """
  lte: [Float]
  """
  The value is in the given array of values
  """
  in: [[Float]!]
  """
  The value is not in the given array of values
  """
  nin: [[Float]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [Float]
  """
  Checks if the array is contained within the provided array
  """
  contained: [Float]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [Float]
  """
  A negation of the given filter
  """
  not: FloatArrayFilterInput
}

"""
Search filter input for Boolean array type.
"""
input BooleanArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [Boolean]
  """
  The value is not the one given
  """
  ne: [Boolean]
  """
  The value is greater than the one given
  """
  gt: [Boolean]
  """
  The value is less than the one given
  """
  lt: [Boolean]
  """
  The value is greater than, or equal to the one given
  """
  gte: [Boolean]
  """
  The value is less than, or equal to the one given
  """
  lte: [Boolean]
  """
  The value is in the given array of values
  """
  in: [[Boolean]!]
  """
  The value is not in the given array of values
  """
  nin: [[Boolean]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [Boolean]
  """
  Checks if the array is contained within the provided array
  """
  contained: [Boolean]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [Boolean]
  """
  A negation of the given filter
  """
  not: BooleanArrayFilterInput
}

"""
Search filter input for Bytes array type.
"""
input BytesArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [Bytes]
  """
  The value is not the one given
  """
  ne: [Bytes]
  """
  The value is greater than the one given
  """
  gt: [Bytes]
  """
  The value is less than the one given
  """
  lt: [Bytes]
  """
  The value is greater than, or equal to the one given
  """
  gte: [Bytes]
  """
  The value is less than, or equal to the one given
  """
  lte: [Bytes]
  """
  The value is in the given array of values
  """
  in: [[Bytes]!]
  """
  The value is not in the given array of values
  """
  nin: [[Bytes]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [Bytes]
  """
  Checks if the array is contained within the provided array
  """
  contained: [Bytes]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [Bytes]
  """
  A negation of the given filter
  """
  not: BytesArrayFilterInput
}

"""
Search filter input for JSON array type.
"""
input JSONArrayFilterInput @oneOf {
  """
  The value is exactly the one given
  """
  eq: [JSON]
  """
  The value is not the one given
  """
  ne: [JSON]
  """
  The value is greater than the one given
  """
  gt: [JSON]
  """
  The value is less than the one given
  """
  lt: [JSON]
  """
  The value is greater than, or equal to the one given
  """
  gte: [JSON]
  """
  The value is less than, or equal to the one given
  """
  lte: [JSON]
  """
  The value is in the given array of values
  """
  in: [[JSON]!]
  """
  The value is not in the given array of values
  """
  nin: [[JSON]!]
  """
  Checks if the array contains all elements of the provided array
  """
  contains: [JSON]
  """
  Checks if the array is contained within the provided array
  """
  contained: [JSON]
  """
  Checks if the array has any elements in common with the provided array
  """
  overlaps: [JSON]
  """
  A negation of the given filter
  """
  not: JSONArrayFilterInput
}

"""
Specifies the ordering for Product results.
"""
input ProductOrderByInput @oneOf {
  """
  Order products by id
  """
  id: OrderDirection
  """
  Order products by sku
  """
  sku: OrderDirection
  """
  Order products by name
  """
  name: OrderDirection
  """
  Order products by slug
  """
  slug: OrderDirection
  """
  Order products by description
  """
  description: OrderDirection
  """
  Order products by price
  """
  price: OrderDirection
  """
  Order products by createdAt
  """
  createdAt: OrderDirection
  """
  Order products by updatedAt
  """
  updatedAt: OrderDirection
}

"""
Input type to select a unique Product
"""
input ProductLookupInput @oneOf {
  """
  Select by the 'id' field
  """
  id: String
  """
  Select by the 'sku' field
  """
  sku: String
  """
  Select by the 'slug' field
  """
  slug: String
}

"""
Lookup input type for Product objects for subgraph joins.
"""
input ProductManyLookupInput @oneOf @inaccessible {
  """
  Select by the 'id' field
  """
  id: [String!] @inaccessible
  """
  Select by the 'sku' field
  """
  sku: [String!] @inaccessible
  """
  Select by the 'slug' field
  """
  slug: [String!] @inaccessible
}

"""
Filter input type for Product collections
"""
input ProductCollectionFilterInput {
  """
  The object is related to an object with the given fields
  """
  contains: ProductFilterInput
}

"""
Filter input type for Product objects.
"""
input ProductFilterInput @oneOf {
  """
  Filter by the given id
  """
  id: StringFilterInput
  """
  Filter by the given sku
  """
  sku: StringFilterInput
  """
  Filter by the given name
  """
  name: StringFilterInput
  """
  Filter by the given slug
  """
  slug: StringFilterInput
  """
  Filter by the given description
  """
  description: StringFilterInput
  """
  Filter by the given price
  """
  price: DecimalFilterInput
  """
  Filter by the given createdAt
  """
  createdAt: StringFilterInput
  """
  Filter by the given updatedAt
  """
  updatedAt: StringFilterInput
  """
  Filter by the related Variant objects
  """
  variants: VariantCollectionFilterInput
  """
  All of the filters must match
  """
  ALL: [ProductFilterInput]
  """
  None of the filters must match
  """
  NONE: [ProductFilterInput]
  """
  At least one of the filters must match
  """
  ANY: [ProductFilterInput]
}

"""
Input for creating a new Product
"""
input ProductCreateInput {
  """
  Set field value for id
  """
  id: String
  """
  Set field value for sku
  """
  sku: String!
  """
  Set field value for name
  """
  name: String!
  """
  Set field value for slug
  """
  slug: String!
  """
  Set field value for description
  """
  description: String
  """
  Set field value for price
  """
  price: Decimal!
  """
  Set field value for createdAt
  """
  createdAt: String
  """
  Set field value for updatedAt
  """
  updatedAt: String
}

"""
Input for updating an existing Product
"""
input ProductUpdateInput {
  """
  Update field value for id
  """
  id: StringUpdateInput
  """
  Update field value for sku
  """
  sku: StringUpdateInput
  """
  Update field value for name
  """
  name: StringUpdateInput
  """
  Update field value for slug
  """
  slug: StringUpdateInput
  """
  Update field value for description
  """
  description: StringUpdateInput
  """
  Update field value for price
  """
  price: DecimalUpdateInput
  """
  Update field value for createdAt
  """
  createdAt: StringUpdateInput
  """
  Update field value for updatedAt
  """
  updatedAt: StringUpdateInput
}

"""
Specifies the ordering for Variant results.
"""
input VariantOrderByInput @oneOf {
  """
  Order variants by id
  """
  id: OrderDirection
  """
  Order variants by productId
  """
  productId: OrderDirection
  """
  Order variants by sku
  """
  sku: OrderDirection
  """
  Order variants by name
  """
  name: OrderDirection
  """
  Order variants by price
  """
  price: OrderDirection
  """
  Order variants by createdAt
  """
  createdAt: OrderDirection
  """
  Order variants by updatedAt
  """
  updatedAt: OrderDirection
  """
  Order Variant results by Product fields
  """
  product: ProductOrderByInput
}

"""
Input type to select a unique Variant
"""
input VariantLookupInput @oneOf {
  """
  Select by the 'id' field
  """
  id: String
  """
  Select by the 'sku' field
  """
  sku: String
}

"""
Lookup input type for Variant objects for subgraph joins.
"""
input VariantManyLookupInput @oneOf @inaccessible {
  """
  Select by the 'id' field
  """
  id: [String!] @inaccessible
  """
  Select by the 'sku' field
  """
  sku: [String!] @inaccessible
}

"""
Filter input type for Variant collections
"""
input VariantCollectionFilterInput {
  """
  The object is related to an object with the given fields
  """
  contains: VariantFilterInput
}

"""
Filter input type for Variant objects.
"""
input VariantFilterInput @oneOf {
  """
  Filter by the given id
  """
  id: StringFilterInput
  """
  Filter by the given productId
  """
  productId: StringFilterInput
  """
  Filter by the given sku
  """
  sku: StringFilterInput
  """
  Filter by the given name
  """
  name: StringFilterInput
  """
  Filter by the given price
  """
  price: DecimalFilterInput
  """
  Filter by the given createdAt
  """
  createdAt: StringFilterInput
  """
  Filter by the given updatedAt
  """
  updatedAt: StringFilterInput
  """
  Filter by the related Product object
  """
  product: ProductFilterInput
  """
  All of the filters must match
  """
  ALL: [VariantFilterInput]
  """
  None of the filters must match
  """
  NONE: [VariantFilterInput]
  """
  At least one of the filters must match
  """
  ANY: [VariantFilterInput]
}

"""
Input for creating a new Variant
"""
input VariantCreateInput {
  """
  Set field value for id
  """
  id: String
  """
  Set field value for productId
  """
  productId: String!
  """
  Set field value for sku
  """
  sku: String!
  """
  Set field value for name
  """
  name: String
  """
  Set field value for price
  """
  price: Decimal
  """
  Set field value for createdAt
  """
  createdAt: String
  """
  Set field value for updatedAt
  """
  updatedAt: String
}

"""
Input for updating an existing Variant
"""
input VariantUpdateInput {
  """
  Update field value for id
  """
  id: StringUpdateInput
  """
  Update field value for productId
  """
  productId: StringUpdateInput
  """
  Update field value for sku
  """
  sku: StringUpdateInput
  """
  Update field value for name
  """
  name: StringUpdateInput
  """
  Update field value for price
  """
  price: DecimalUpdateInput
  """
  Update field value for createdAt
  """
  createdAt: StringUpdateInput
  """
  Update field value for updatedAt
  """
  updatedAt: StringUpdateInput
}

"""
Information about pagination in a collection of objects
"""
type PageInfo @shareable {
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean! @shareable
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean! @shareable
  """
  The cursor of the first item in the page
  """
  startCursor: String! @shareable
  """
  The cursor of the last item in the page
  """
  endCursor: String! @shareable
}

"""
Return type containing fields of the mutated or created Product object
"""
type ProductReturning @pgReturning(type: "Product") {
  """
  The value of the id field
  """
  id: String! @shareable
  """
  The value of the sku field
  """
  sku: String! @shareable
  """
  The value of the name field
  """
  name: String!
  """
  The value of the slug field
  """
  slug: String! @shareable
  """
  The value of the description field
  """
  description: String
  """
  The value of the price field
  """
  price: Decimal!
  """
  The value of the createdAt field
  """
  createdAt: String!
  """
  The value of the updatedAt field
  """
  updatedAt: String!
}

"""
Return type when creating one Product
"""
type ProductCreatePayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: ProductReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when creating many products
"""
type ProductCreateManyPayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: [ProductReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when updating one Product
"""
type ProductUpdatePayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: ProductReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when updating many products
"""
type ProductUpdateManyPayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: [ProductReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when deleting one Product
"""
type ProductDeletePayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: ProductReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when deleting many products
"""
type ProductDeleteManyPayload @pgMutation(type: "Product") {
  """
  Returned item(s) from the mutation
  """
  returning: [ProductReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
An edge in a connection. Contains the node and its cursor
"""
type ProductEdge {
  """
  The item at the end of the edge
  """
  node: Product! @shareable
  """
  A cursor for use in pagination
  """
  cursor: String! @shareable
}

"""
The connection type for Product
"""
type ProductConnection @pgConnection(type: "Product") {
  """
  A list of edges
  """
  edges: [ProductEdge!]! @shareable
  """
  Information to aid in pagination
  """
  pageInfo: PageInfo! @shareable
}

"""
Return type containing fields of the mutated or created Variant object
"""
type VariantReturning @pgReturning(type: "Variant") {
  """
  The value of the id field
  """
  id: String! @shareable
  """
  The value of the productId field
  """
  productId: String!
  """
  The value of the sku field
  """
  sku: String! @shareable
  """
  The value of the name field
  """
  name: String
  """
  The value of the price field
  """
  price: Decimal
  """
  The value of the createdAt field
  """
  createdAt: String!
  """
  The value of the updatedAt field
  """
  updatedAt: String!
}

"""
Return type when creating one Variant
"""
type VariantCreatePayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: VariantReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when creating many variants
"""
type VariantCreateManyPayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: [VariantReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when updating one Variant
"""
type VariantUpdatePayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: VariantReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when updating many variants
"""
type VariantUpdateManyPayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: [VariantReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when deleting one Variant
"""
type VariantDeletePayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: VariantReturning @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
Return type when deleting many variants
"""
type VariantDeleteManyPayload @pgMutation(type: "Variant") {
  """
  Returned item(s) from the mutation
  """
  returning: [VariantReturning]! @shareable
  """
  The number of rows mutated
  """
  rowCount: Int! @shareable
}

"""
An edge in a connection. Contains the node and its cursor
"""
type VariantEdge {
  """
  The item at the end of the edge
  """
  node: Variant! @shareable
  """
  A cursor for use in pagination
  """
  cursor: String! @shareable
}

"""
The connection type for Variant
"""
type VariantConnection @pgConnection(type: "Variant") {
  """
  A list of edges
  """
  edges: [VariantEdge!]! @shareable
  """
  Information to aid in pagination
  """
  pageInfo: PageInfo! @shareable
}

type Product
  @key(fields: "id")
  @key(fields: "sku")
  @key(fields: "slug")
  @pgTable(name: "products")
  @pgKey(fields: ["id"], type: PRIMARY)
  @pgKey(fields: ["sku"], type: UNIQUE)
  @pgKey(fields: ["slug"], type: UNIQUE) {
  id: String! @pgColumn(name: "id", type: UUID)
  sku: String! @pgColumn(name: "sku", type: VARCHAR)
  name: String! @pgColumn(name: "name", type: VARCHAR)
  slug: String! @pgColumn(name: "slug", type: VARCHAR)
  description: String @pgColumn(name: "description", type: TEXT)
  price: Decimal! @pgColumn(name: "price", type: NUMERIC)
  createdAt: String! @pgColumn(name: "created_at", type: TIMESTAMP)
  updatedAt: String! @pgColumn(name: "updated_at", type: TIMESTAMP)
  variants(
    """
    Filter the related Variant instances
    """
    filter: VariantFilterInput
    """
    Select the first Variant instances
    """
    first: Int
    """
    Select the last Variant instances
    """
    last: Int
    """
    Select the Variant instances before the given cursor
    """
    before: String
    """
    Select the Variant instances after the given cursor
    """
    after: String
    """
    Order the Variant instances by the given fields
    """
    orderBy: [VariantOrderByInput!]
  ): VariantConnection! @pgRelation(name: "variants_product_id_fkey")
}

type Variant
  @key(fields: "id")
  @key(fields: "sku")
  @pgTable(name: "variants")
  @pgKey(fields: ["id"], type: PRIMARY)
  @pgKey(fields: ["sku"], type: UNIQUE) {
  id: String! @pgColumn(name: "id", type: UUID)
  productId: String! @pgColumn(name: "product_id", type: UUID)
  sku: String! @pgColumn(name: "sku", type: VARCHAR)
  name: String @pgColumn(name: "name", type: VARCHAR)
  price: Decimal @pgColumn(name: "price", type: NUMERIC)
  createdAt: String! @pgColumn(name: "created_at", type: TIMESTAMP)
  updatedAt: String! @pgColumn(name: "updated_at", type: TIMESTAMP)
  product: Product! @pgRelation(name: "variants_product_id_fkey", fields: ["productId"], references: ["id"])
}

type Query {
  """
  Query a unique Product
  """
  product(
    """
    Input for unique Product lookup
    """
    lookup: ProductLookupInput!
  ): Product @pgSelectOne
  """
  Query and paginate multiple products
  """
  products(
    """
    Filter for Product
    """
    filter: ProductFilterInput
    """
    Limit the number of results, from the beginning
    """
    first: Int
    """
    Limit the number of results, from the end
    """
    last: Int
    """
    Cursor for pagination, select items before the cursor. Use together with `last`.
    """
    before: String
    """
    Cursor for pagination, select items after the cursor. Use together with `first`.
    """
    after: String
    """
    Order the results by selected fields
    """
    orderBy: [ProductOrderByInput!]
  ): ProductConnection! @pgSelectMany
  """
  Lookup multiple products for subgraph joins
  """
  productLookup(
    """
    Filter products with an array of keys
    """
    lookup: ProductManyLookupInput @inaccessible
  ): [Product]! @pgLookup @lookup @inaccessible
  """
  Query a unique Variant
  """
  variant(
    """
    Input for unique Variant lookup
    """
    lookup: VariantLookupInput!
  ): Variant @pgSelectOne
  """
  Query and paginate multiple variants
  """
  variants(
    """
    Filter for Variant
    """
    filter: VariantFilterInput
    """
    Limit the number of results, from the beginning
    """
    first: Int
    """
    Limit the number of results, from the end
    """
    last: Int
    """
    Cursor for pagination, select items before the cursor. Use together with `last`.
    """
    before: String
    """
    Cursor for pagination, select items after the cursor. Use together with `first`.
    """
    after: String
    """
    Order the results by selected fields
    """
    orderBy: [VariantOrderByInput!]
  ): VariantConnection! @pgSelectMany
  """
  Lookup multiple variants for subgraph joins
  """
  variantLookup(
    """
    Filter variants with an array of keys
    """
    lookup: VariantManyLookupInput @inaccessible
  ): [Variant]! @pgLookup @lookup @inaccessible
}

type Mutation {
  """
  Create a single Product
  """
  productCreate(
    """
    Input for creating a single Product
    """
    input: ProductCreateInput!
  ): ProductCreatePayload! @pgInsertOne
  """
  Create multiple products
  """
  productCreateMany(
    """
    Input for creating multiple Product instances
    """
    input: [ProductCreateInput!]!
  ): ProductCreateManyPayload! @pgInsertMany
  """
  Update a unique Product
  """
  productUpdate(
    """
    Lookup input for unique Product update
    """
    lookup: ProductLookupInput!
    """
    Input for updating a Product
    """
    input: ProductUpdateInput!
  ): ProductUpdatePayload! @pgUpdateOne
  """
  Update multiple products
  """
  productUpdateMany(
    """
    Filter for updating multiple Product instances
    """
    filter: ProductFilterInput
    """
    Input for updating multiple Product instances
    """
    input: ProductUpdateInput!
  ): ProductUpdateManyPayload! @pgUpdateMany
  """
  Delete a unique Product
  """
  productDelete(
    """
    Lookup input for unique Product deletion
    """
    lookup: ProductLookupInput!
  ): ProductDeletePayload! @pgDeleteOne
  """
  Delete multiple products
  """
  productDeleteMany(
    """
    Filter for Product deletion
    """
    filter: ProductFilterInput
  ): ProductDeleteManyPayload! @pgDeleteMany
  """
  Create a single Variant
  """
  variantCreate(
    """
    Input for creating a single Variant
    """
    input: VariantCreateInput!
  ): VariantCreatePayload! @pgInsertOne
  """
  Create multiple variants
  """
  variantCreateMany(
    """
    Input for creating multiple Variant instances
    """
    input: [VariantCreateInput!]!
  ): VariantCreateManyPayload! @pgInsertMany
  """
  Update a unique Variant
  """
  variantUpdate(
    """
    Lookup input for unique Variant update
    """
    lookup: VariantLookupInput!
    """
    Input for updating a Variant
    """
    input: VariantUpdateInput!
  ): VariantUpdatePayload! @pgUpdateOne
  """
  Update multiple variants
  """
  variantUpdateMany(
    """
    Filter for updating multiple Variant instances
    """
    filter: VariantFilterInput
    """
    Input for updating multiple Variant instances
    """
    input: VariantUpdateInput!
  ): VariantUpdateManyPayload! @pgUpdateMany
  """
  Delete a unique Variant
  """
  variantDelete(
    """
    Lookup input for unique Variant deletion
    """
    lookup: VariantLookupInput!
  ): VariantDeletePayload! @pgDeleteOne
  """
  Delete multiple variants
  """
  variantDeleteMany(
    """
    Filter for Variant deletion
    """
    filter: VariantFilterInput
  ): VariantDeleteManyPayload! @pgDeleteMany
}
