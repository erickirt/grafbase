name: Gateway Release

on:
  workflow_call:
    inputs:
      draft:
        type: boolean
        required: true
      prerelease:
        type: boolean
        required: true
      tag:
        type: string
        required: true

    secrets:
      CRATES_ACCESS_TOKEN:
        required: true
      NPM_ACCESS_TOKEN:
        required: true

permissions:
  # Allow login to via OIDC
  id-token: write
  # Allow creating GitHub releases
  contents: write

jobs:
  release:
    name: Release gateway
    runs-on: depot-ubuntu-24.04-small
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-rust
        with:
          target: x86_64-unknown-linux-musl

      - name: Parse version tag
        run: |
          VERSION_BUMP="${{ inputs.tag }}"
          VERSION_BUMP=${VERSION_BUMP//gateway-} # remove the gateway prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - name: Announce release attempt on Slack
        uses: ravsamhq/notify-slack-action@be814b201e233b2dc673608aa46e5447c8ab13f2 # v2
        with:
          notification_title: '({workflow}) grafbase-gateway release for ${{ env.VERSION_BUMP }} started'
          footer: '<{run_url}|View Run>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_GATEWAY_WEBHOOK_URL }}

      - name: Create release directories
        shell: bash
        run: |
          mkdir -p gateway/release/aarch64-apple-darwin
          mkdir -p gateway/release/aarch64-unknown-linux-musl
          mkdir -p gateway/release/x86_64-unknown-linux-musl
          mkdir -p gateway/release/aarch64-unknown-linux-musl-lambda
          mkdir -p gateway/release/x86_64-unknown-linux-musl-lambda

      - name: Download darwin-aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: gateway-${{ env.VERSION_BUMP }}-aarch64-apple-darwin
          path: gateway/release/aarch64-apple-darwin

      - name: Download Linux AMD artifact
        uses: actions/download-artifact@v4
        with:
          name: gateway-${{ env.VERSION_BUMP }}-linux
          path: gateway/release/x86_64-unknown-linux-musl

      - name: Download Linux ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: gateway-${{ env.VERSION_BUMP }}-linux-arm
          path: gateway/release/aarch64-unknown-linux-musl

      - name: Download Lambda AMD artifact
        uses: actions/download-artifact@v4
        with:
          name: gateway-lambda-${{ env.VERSION_BUMP }}-linux
          path: gateway/release/x86_64-unknown-linux-musl-lambda

      - name: Download Lambda ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: gateway-lambda-${{ env.VERSION_BUMP }}-linux-arm
          path: gateway/release/aarch64-unknown-linux-musl-lambda

      - name: Process artifacts
        shell: bash
        run: |
          cd gateway/release/
          mkdir github

          mv aarch64-apple-darwin/grafbase-gateway github/grafbase-gateway-aarch64-apple-darwin
          mv aarch64-unknown-linux-musl/grafbase-gateway github/grafbase-gateway-aarch64-unknown-linux-musl
          mv x86_64-unknown-linux-musl/grafbase-gateway github/grafbase-gateway-x86_64-unknown-linux-musl
          mv aarch64-unknown-linux-musl-lambda/grafbase-gateway github/grafbase-gateway-lambda-aarch64-unknown-linux-musl
          mv x86_64-unknown-linux-musl-lambda/grafbase-gateway github/grafbase-gateway-lambda-x86_64-unknown-linux-musl

          chmod +x github/grafbase-gateway-aarch64-apple-darwin
          chmod +x github/grafbase-gateway-aarch64-unknown-linux-musl
          chmod +x github/grafbase-gateway-x86_64-unknown-linux-musl
          chmod +x github/grafbase-gateway-lambda-aarch64-unknown-linux-musl
          chmod +x github/grafbase-gateway-lambda-x86_64-unknown-linux-musl

      - name: Install cargo-binstall and cargo-about
        shell: bash
        run: |
          curl -LsSf https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
          cargo binstall --no-symlinks --no-confirm cargo-about

      - name: Generate licenses
        shell: bash
        run: |
          cd gateway
          cargo about generate -c about.toml -o "licenses.html" about.hbs

      - name: Github gateway Release
        id: gh-release-gateway
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2
        with:
          body_path: gateway/changelog/${{ env.VERSION_BUMP }}.md
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          files: |
            gateway/licenses.html
            gateway/release/github/grafbase-gateway-aarch64-apple-darwin
            gateway/release/github/grafbase-gateway-aarch64-unknown-linux-musl
            gateway/release/github/grafbase-gateway-x86_64-unknown-linux-musl
            gateway/release/github/grafbase-gateway-lambda-aarch64-unknown-linux-musl
            gateway/release/github/grafbase-gateway-lambda-x86_64-unknown-linux-musl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::071269490873:role/openid-github-ci-grafbase
          role-session-name: ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.job }}-github-ci
          aws-region: us-east-1

      - name: Upload Gateway install script to S3
        shell: bash
        env:
          INPUT_PRERELEASE: ${{ inputs.prerelease && 'true' || 'false' }}
        run: |
          if [[ $INPUT_PRERELEASE == "false" ]]; then
            cd cli/install
            sed -i 's/{{LATEST_VERSION}}/${{ env.VERSION_BUMP }}/g' gateway
            aws s3 cp gateway s3://downloads-071269490873/install/gateway
          fi
